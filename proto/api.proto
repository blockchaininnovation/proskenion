syntax = "proto3";
package proskenion;

import "objects.proto";
import "query.proto";

// Error は GRPC Error Code で返す
message TxResponse {}

/**
 * TxGate は Client から Transaction を受け取る
 **/
service API {
    /**
     * Write は Transaction を受け付ける。
     * 受け取った Transaction は ProposalTxQueue に挿入した後、他のPeerに伝搬する。
     *
     * InvalidArgument (code = 3) : One of following conditions:
     *  1 ) StatelessValidator で落ちる場合
     * AlreadyExist (code = 6) : One of following conditions:
     *  1 ) 既に同じ Transaction を受け取っていた場合
     **/
    rpc Write (Transaction) returns (TxResponse);

    /**
     * Read は Query を受け付ける。
     * 受け取った Query の規則に従ってデータを取得し Peer の署名を添付した QueryResponse を返す。
     *
     * InvalidArgument (code = 3) : One of following conditions:
     *  1 ) Verify で落ちる場合
     *  2 ) Validate で落ちる場合
     * NotFound (code = 5) : One of following conditions:
     *  1 ) 検索結果が見つからなかった場合
     **/
    rpc Read (Query) returns (QueryResponse);
}

//TODO
/**
service MultiSigGate {
    rpc Send (Transaction) returns (TxResponse);
}
**/
