syntax = "proto3";
package proskenion;

enum ObjectCode {
    AnythingObjectCode = 0;
    BoolObjectCode = 1;
    Int32ObjectCode = 2;
    Int64ObjectCode = 3;
    Uint32ObjectCode = 4;
    Uint64ObjectCode = 5;
    StringObjectCode = 6;
    BytesObjectCode = 7;
    AddressObjectCode = 8;
    SignatureObjectCode = 9;
    AccountObjectCode = 10;
    PeerObjectCode = 11;
    ListObjectCode = 12;
    DictObjectCode = 13;
    StorageObjectCode = 14;
    MegaStorageObjectCode = 15;
}

message Address {
    string address = 1;
}

message Signature {
    bytes publicKey = 1;
    bytes signature = 2;
}

message Account {
    string accountId = 1;
    string accountName = 2;
    repeated bytes publicKeys = 3;
    int32 quorum = 4;
    int64 balance = 5;
    string delegatePeerId = 6;

}

message Peer {
    string peerId = 1;
    string address = 2;
    bytes publicKey = 3;
}

message ObjectList {
    repeated Object list = 1;
}

message ObjectDict {
    map<string, Object> dict = 1;
}

message Storage {
    map<string, Object> object = 1;
}

message MegaStorage {
    map<string, Object> meta = 1;
    // MerkleTree で管理
    bytes megaBinaryHash = 2;
}

// 参考 : https://triple-underscore.github.io/RFC2616-ja.html#section-3.6.1
message MegaBinaryChunk {
    // 全体
    int64 chunkSize = 1;
    // どこから始まるか
    int64 lastChunk = 2;
    bytes data = 3;
}

message Object {
    ObjectCode type = 1;
    oneof object {
        bool boolean = 2;
        int32 i32 = 3;
        int64 i64 = 4;
        uint32 u32 = 5;
        uint64 u64 = 6;
        string str = 7;
        bytes data = 8;
        string address = 9;
        Signature sig = 10;
        Account account = 11;
        Peer peer = 12;
        ObjectList list = 13;
        ObjectDict dict = 14;
        Storage storage = 15;
        MegaStorage megaStorage = 16;
    }
}
